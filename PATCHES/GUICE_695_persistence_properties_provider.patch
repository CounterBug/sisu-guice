Description: Let clients bind lazy (provided) persistence properties
Author: Stuart McCulloch <mcculls@gmail.com>
Bug-Google: http://code.google.com/p/google-guice/issues/detail?id=695
Last-Update: 2014-08-17

diff --git a/extensions/persist/src/com/google/inject/persist/jpa/JpaPersistModule.java b/extensions/persist/src/com/google/inject/persist/jpa/JpaPersistModule.java
index b318b27..9bbcbfb 100644
--- a/extensions/persist/src/com/google/inject/persist/jpa/JpaPersistModule.java
+++ b/extensions/persist/src/com/google/inject/persist/jpa/JpaPersistModule.java
@@ -37,6 +37,7 @@ import java.lang.reflect.Proxy;
 import java.util.List;
 import java.util.Properties;
 
+import javax.inject.Provider;
 import javax.persistence.EntityManager;
 import javax.persistence.EntityManagerFactory;
 
@@ -55,6 +56,7 @@ public final class JpaPersistModule extends PersistModule {
   }
 
   private Properties properties;
+  private Class<? extends Provider<? extends Properties>> propertiesProvider;
   private MethodInterceptor transactionInterceptor;
 
   @Override protected void configurePersistence() {
@@ -62,6 +64,8 @@ public final class JpaPersistModule extends PersistModule {
 
     if (null != properties) {
       bind(Properties.class).annotatedWith(Jpa.class).toInstance(properties);
+    } else if (null != propertiesProvider) {
+      bind(Properties.class).annotatedWith(Jpa.class).toProvider(propertiesProvider);
     } else {
       bind(Properties.class).annotatedWith(Jpa.class)
           .toProvider(Providers.<Properties>of(null));
@@ -99,6 +103,11 @@ public final class JpaPersistModule extends PersistModule {
     return this;
   }
 
+  public JpaPersistModule properties(Class<? extends Provider<? extends Properties>> provider) {
+    this.propertiesProvider = provider;
+    return this;
+  }
+
   private final List<Class<?>> dynamicFinders = Lists.newArrayList();
 
   /**
diff --git a/extensions/persist/src/com/google/inject/persist/jpa/JpaPersistService.java b/extensions/persist/src/com/google/inject/persist/jpa/JpaPersistService.java
index e0cb992..fc6ef3b 100644
--- a/extensions/persist/src/com/google/inject/persist/jpa/JpaPersistService.java
+++ b/extensions/persist/src/com/google/inject/persist/jpa/JpaPersistService.java
@@ -43,11 +43,11 @@ class JpaPersistService implements Provider<EntityManager>, UnitOfWork, PersistS
   private final ThreadLocal<EntityManager> entityManager = new ThreadLocal<EntityManager>();
 
   private final String persistenceUnitName;
-  private final Properties persistenceProperties;
+  private final Provider<Properties> persistenceProperties;
 
   @Inject
   public JpaPersistService(@Jpa String persistenceUnitName,
-      @Nullable @Jpa Properties persistenceProperties) {
+      @Nullable @Jpa Provider<Properties> persistenceProperties) {
     this.persistenceUnitName = persistenceUnitName;
     this.persistenceProperties = persistenceProperties;
   }
@@ -105,7 +105,7 @@ class JpaPersistService implements Provider<EntityManager>, UnitOfWork, PersistS
 
     if (null != persistenceProperties) {
       this.emFactory = Persistence
-          .createEntityManagerFactory(persistenceUnitName, persistenceProperties);
+          .createEntityManagerFactory(persistenceUnitName, persistenceProperties.get());
     } else {
       this.emFactory = Persistence.createEntityManagerFactory(persistenceUnitName);
     }
diff --git a/extensions/persist/test/com/google/inject/persist/jpa/JpaPersistServiceTest.java b/extensions/persist/test/com/google/inject/persist/jpa/JpaPersistServiceTest.java
index e099a5e..954f691 100644
--- a/extensions/persist/test/com/google/inject/persist/jpa/JpaPersistServiceTest.java
+++ b/extensions/persist/test/com/google/inject/persist/jpa/JpaPersistServiceTest.java
@@ -16,6 +16,8 @@
 
 package com.google.inject.persist.jpa;
 
+import com.google.inject.util.Providers;
+
 import junit.framework.TestCase;
 import static org.hamcrest.Matchers.is;
 import static org.junit.Assert.assertThat;
@@ -34,7 +36,7 @@ public class JpaPersistServiceTest extends TestCase {
   private static final String PERSISTENCE_UNIT_NAME = "test_persistence_unit_name";
   private static final Properties PERSISTENCE_PROPERTIES = new Properties();
 
-  private final JpaPersistService sut = new JpaPersistService(PERSISTENCE_UNIT_NAME, PERSISTENCE_PROPERTIES);
+  private final JpaPersistService sut = new JpaPersistService(PERSISTENCE_UNIT_NAME, Providers.of(PERSISTENCE_PROPERTIES));
   private final PersistenceProvider provider = mock(PersistenceProvider.class);
   private final EntityManagerFactory factory = mock(EntityManagerFactory.class);
   private final EntityManager entityManager = mock(EntityManager.class);
